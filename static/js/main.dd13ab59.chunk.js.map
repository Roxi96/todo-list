{"version":3,"sources":["components/Formulario.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearTodo","useState","todoInput","todo","actualizarTodo","error","actualizarError","onSubmit","e","preventDefault","trim","id","uuidv4","className","type","name","placeholder","onChange","target","value","Todo","eliminarTodo","onClick","App","todosIniciales","JSON","parse","localStorage","getItem","todos","guardarTodos","useEffect","setItem","stringify","nuevosTodos","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAsEeA,EAnEI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAGrB,EAA+BC,mBAAU,CACrCC,UAAU,KADd,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAcC,EAAd,KAWOJ,EAAaC,EAAbD,UA0BH,OAEI,uBACAK,SA1BW,SAAAC,GACfA,EAAEC,iBAGoB,KAAnBP,EAAUQ,QAKbJ,GAAgB,GAEhBH,EAAKQ,GAAIC,cAGTZ,EAAUG,GAGVC,EAAe,CACXF,UAAU,MAbVI,GAAgB,IAoBhB,UAGI,mBAAGO,UAAU,+BAAb,mBACCR,EAAQ,mBAAGQ,UAAU,uCAAb,qDAAgG,KACzG,gCACA,uBACAA,UAAU,YACVC,KAAK,OACLC,KAAK,YACLC,YAAY,mBACZC,SA/CU,SAACT,GACnBJ,EAAe,2BACRD,GADO,kBAETK,EAAEU,OAAOH,KAAQP,EAAEU,OAAOC,UA6CvBA,MAAOjB,IAEP,wBAAQiB,MAAM,SAASN,UAAU,6CAAjC,sBC/CGO,EAdF,SAAC,GAAD,IAAEjB,EAAF,EAAEA,KAAMkB,EAAR,EAAQA,aAAR,OACT,sBAAKR,UAAU,qDAAf,UACI,mBAAGA,UAAU,UAAb,SAAwBV,EAAKD,YAC7B,qBAAKW,UAAU,GAAf,SACA,wBACAA,UAAU,4EACVS,QAAS,kBAAKD,EAAalB,EAAKQ,KAFhC,qBCiEOY,MAjEf,WAIA,IAAIC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,UAEjDJ,IACFA,EAAiB,IAInB,MAA6BvB,mBAASuB,GAAtC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAW,WACNP,EACDG,aAAaK,QAAQ,QAAQP,KAAKQ,UAAUJ,IAE5CF,aAAaK,QAAQ,QAAQP,KAAKQ,UAAU,OAE9C,CAACJ,IAGH,IAUMR,EAAe,SAAAV,GACnB,IAAMuB,EAAcL,EAAMM,QAAO,SAAAhC,GAAI,OAAIA,EAAKQ,KAAOA,KACrDmB,EAAaI,IAEb,OACE,yBAAQrB,UAAU,GAAlB,UACE,qBAAKA,UAAU,4CAAf,SACI,oBAAIA,UAAU,oDAAd,0BAEJ,sBAAKA,UAAU,mCAAf,UACE,qBAAKA,UAAU,iDAAf,SACE,cAAC,EAAD,CACAb,UAtBQ,SAAAG,GAChB2B,EAAa,GAAD,mBACPD,GADO,CAEV1B,UAuBI,sBAAKU,UAAU,gDAAf,UACE,oBAAIA,UAAU,qCAAd,+BACCgB,EAAMO,KAAI,SAAAjC,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNkB,aAAcA,GAFTlB,EAAKQ,iBC/CT0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dd13ab59.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Formulario = ({crearTodo}) => {\r\n\r\n//crear states de todo's\r\nconst [todo, actualizarTodo] = useState ({\r\n    todoInput:''\r\n});\r\n//segundo state\r\nconst [error, actualizarError] = useState(false)\r\n\r\n//funcion q se ejecuta cada q el usuario escribe en el input\r\nconst actualizarState=(e)=>{\r\n    actualizarTodo({\r\n        ...todo,     //objeto q se va a copiar  , se toma una copia y despues\r\n        [e.target.name] : e.target.value //se reescribe en el campo que estemos escribiendo\r\n    })\r\n}\r\n\r\n//extraer los valores\r\nconst {todoInput} = todo;\r\n\r\n//cuando el user presiona PLUS (+)\r\nconst submitTodo = e => {\r\n    e.preventDefault();\r\n\r\n    //validar\r\n    if(todoInput.trim()===''){\r\n        actualizarError(true);\r\n        return;\r\n    }\r\n    //eliminar el mensaje previo\r\n    actualizarError(false);\r\n    //asignar un id\r\n    todo.id= uuidv4();\r\n\r\n    //crear todo\r\n    crearTodo(todo);\r\n\r\n    //reniniciar todo\r\n    actualizarTodo({\r\n        todoInput:''\r\n    })\r\n}\r\n\r\n\r\n    return ( \r\n        \r\n        <form \r\n        onSubmit={submitTodo}\r\n        >\r\n            <p className=\"text-3xl text-pink-800 mb-4 \">List:</p>\r\n            {error ? <p className=\" bg-red-400  text-white text-xl my-5\">Empty todo. You should write something!</p>:null}\r\n            <div>\r\n            <input \r\n            className=\"w-4/5 p-3\" \r\n            type=\"text\" \r\n            name=\"todoInput\" \r\n            placeholder=\"Add something...\"\r\n            onChange={actualizarState}\r\n            value={todoInput}\r\n            />\r\n            <button value=\"submit\" className=\"bg-purple-200 p-3 font-bold text-pink-600 \">+</button>\r\n            </div>\r\n         \r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Todo = ({todo, eliminarTodo}) =>  ( \r\n    <div className=\"bg-white my-5 p-3 rounded-lg flex justify-between \">\r\n        <p className=\"text-xl\">{todo.todoInput}</p>\r\n        <div className=\"\">\r\n        <button\r\n        className=\"border-4 border-pink-600 text-white font-bold bg-pink-600 px-4 rounded-lg\"\r\n        onClick={()=> eliminarTodo(todo.id)}\r\n        >X</button>\r\n        </div>\r\n        \r\n    </div>\r\n );\r\n\r\n \r\nexport default Todo;","import React from 'react';\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport Formulario from './components/Formulario';\nimport Todo from './components/Todo';\n\n\nfunction App() {\n\n\n//todos en local storage\nlet todosIniciales = JSON.parse(localStorage.getItem('todos'));\n//si no hay todos iniciales , entonces se hara array vacio\nif(!todosIniciales){\n  todosIniciales = [];\n}\n\n//arreglo de todos\nconst [todos, guardarTodos]= useState(todosIniciales);\n\n//hacer algo cuando el state cambie\nuseEffect( () => {\n  if(todosIniciales){\n    localStorage.setItem('todos',JSON.stringify(todos));\n  }else{\n    localStorage.setItem('todos',JSON.stringify([]));\n  }\n},[todos]);\n\n//funcion q tome los todos actuales y agregue la nueva\nconst crearTodo = todo =>{\n  guardarTodos([\n    ...todos,\n    todo\n  ]);\n}\n\n\n\n//funcion q elimina un todo por su id\nconst eliminarTodo = id =>{\n  const nuevosTodos = todos.filter(todo => todo.id !== id);\n  guardarTodos(nuevosTodos);\n}\n  return (\n    <header className=\"\">\n      <div className=\"bg-purple-200 w-full flex justify-center \">\n          <h1 className=\"text-7xl text-purple-700 my-5 font-sans font-bold\">To-do List</h1>\n      </div>\n      <div className=\"flex flex-col items-center my-5 \">\n        <div className=\"bg-yellow-100 w-3/6 text-center p-8 rounded-lg\">\n          <Formulario\n          crearTodo={crearTodo}\n          />\n        </div>\n        \n        <div className=\"bg-yellow-100 w-3/6 mt-10 p-10 p-8 rounded-lg\" >\n          <h2 className=\"text-center text-2xl font-semibold\">Manage your List:</h2>\n          {todos.map(todo => (\n            <Todo\n              key={todo.id}\n              todo={todo}\n              eliminarTodo={eliminarTodo}\n            />\n          ))}\n        </div>\n      </div>\n    </header>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}